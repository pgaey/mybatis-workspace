<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- namespace : 해당 mapper파일의 고유한 별칭 -->
<!-- 전체가 mapper태그로 감싸져 있어야 함 -->

	<!-- 
		* DML문일 경우
		<insert id="각 SQL문의 식별자"(보편적으로 이 DML문을 실행하는 메소드명을 적음) parameterType="전달받을 자바타입(풀클래스명) 혹은 별칭">
			쿼리문 작성
		</insert>
		<update></update>
		<delete></delete>
		
		* SELECT문일 경우 ★★★★ resultType or resultMap
		<select id="각 SQL문의 식별자" parameterType="전달받을 자바타입(풀클래스명) 혹은 별칭"
		 resultType="조회결과를 반환하는 자바타입" 또는 resultMap="조회결과를 뽑아서 매핑할 resultMap의 id">
			쿼리문 작성
		</select>
		
		=> parameter Type속성은 전달받을 값이 없다면 생략 가능!
		=> SELECT문의 결과는 항상 어떤 SELECT문이냐에 따라서 다를 수 있음
		=> count()를 썼다면 정수    중복체크를 했다면 문자열     로그인을 했다면 Member
		=> 반드시 resultType(자바에서 제공하는 자료형) 또는
		        resultMap(내가 만든 VO클래스타입)으로 결과에 대한 타입을 지정해야함
		
		그동안 pstmt객체를 이용해서 ?(위치홀더)를 사용했지만
		앞으로는 위치홀더 대신 해당 SQL문에 전달된 객체로부터 값을 꺼내서 사용 -> 내부적으로 getter메소드 호출!
		값을 꺼내는 방법 #{ 필드명 또는 변수명 또는 map의 키값 }을 이용
		EL구문 $와 헷갈리지 않게 ######
	-->
	
	<!-- <insert id="insertMember" parameterType="com.kh.mybatis.member.model.vo.Member"> 별칭을 짓지 않았을 경우  -->
	<insert id="insertMember" parameterType="member"> <!-- <typeAliases>으로 별칭을 지었을 경우 -->
		INSERT
		  INTO
		  	   MEMBER
		  	   (
		  	   USER_NO,
		  	   USER_ID,
		  	   USER_PWD,
		  	   USER_NAME,
		  	   EMAIL,
		  	   BIRTHDAY,
		  	   GENDER,
		  	   PHONE,
		  	   ADDRESS
		  	   )
		VALUES
			   (
			   SEQ_UNO.NEXTVAL,
			   #{userId},
			   #{userPwd},
			   #{userName},
			   #{email},
			   #{birthday},
			   #{gender},
			   #{phone},
			   #{address}
			   )
	</insert>
	
	
	<!-- 
		
		* resultMap : 마이바티스의 강력한 기능 중 하나
					  ResultSet으로부터 조회된 컬럼값을 하나씩 뽑아서
					  내가 지정한 VO객체에 각 필드에 담는 JDBC코드를 줄여주는 역할 수행
					  
		<resultMap id="식별자" type="조회된 결과를 담아서 반환하고자 하는 VO객체의 타입(풀클래스명) 또는 별칭">
			<result column="조회된 결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
			<result column="조회된 결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
			<result column="조회된 결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
			<result column="조회된 결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
			...		
		</resultMap>
		
	-->
	
	<!-- 내부적으로 필드에 대한 setter메소드를 호출  setter() 꼭 있어야함 -->
	
	<resultMap id="memberResultSet" type="member">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="BIRTHDAY" property="birthday" />
		<result column="GENDER" property="gender" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="STATUS" property="status" />
	</resultMap>
	
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT
			   USER_NO,
			   USER_ID,
			   USER_PWD,
			   USER_NAME,
			   EMAIL,
			   BIRTHDAY,
			   GENDER,
			   PHONE,
			   ADDRESS,
			   ENROLL_DATE,
			   MODIFY_DATE,
			   STATUS
		  FROM
		  	   MEMBER
		 WHERE
		  	   USER_ID = #{userId}
		   AND
		   	   USER_PWD = #{userPwd}
		   AND
		   	   STATUS = 'Y'
	</select>



















</mapper>